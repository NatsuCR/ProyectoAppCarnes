package InterfazAdmin;

import Logica.Carne;
import Logica.Controladora;
import Logica.Usuario;
import Logica.Venta;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jarav
 */
public class pnlHistorialVentas extends javax.swing.JPanel {

    /**
     * Creates new form pnlHistorialVentas
     */
    Usuario usr;
    Controladora control;
    Carne carnes;
    Venta ventas;

    public pnlHistorialVentas(Controladora control, Usuario usr, Carne carnes, Venta ventas) {
        initComponents();

        this.control = control;
        this.usr = usr;
        this.carnes = carnes;
        this.ventas = ventas;
        cargarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void cargarTabla() {
        // Definir model para la tabla
        DefaultTableModel modeloTabla = new DefaultTableModel() {

            //Filas y Columnas no sean editables
            @Override
            public boolean isCellEditable(int row, int colum) {

                return false;

            }
        };

        //Establecemos titulos
        String titulos[] = {"ID", "IdUsuario", "Nombre", "Apeliidos", "IdCarne", "TipoDeCarne", "Marca", "Fecha", "CantidadAdquirida", "Total"};
        //Envia los titulos a un identificador de columnas
        modeloTabla.setColumnIdentifiers(titulos);

        //Traer de la BD la lista de usuarios
        List<Venta> listaVentas = control.traerVentas();

        //Validar que no sea null
        if (listaVentas != null) {
            //Si no hay null, entonces recorrecmos la listaUsuarios
            for (Venta vent : listaVentas) {
                //Guardarlo en un array o list de tipo object, porque hay varios tipos de datos
                Object[] objeto = {vent.getId(), vent.getIdUsuario(), vent.getUsuario(), vent.getApellidos(), vent.getIdCarne(), vent.getTipoDeCarne(),
                    vent.getTipoDeMarca(), vent.getFecha(), vent.getCantidadAdquirida(), vent.getTotal()};

                //Agregamos el los datos que recorrio el for a la tabla 
                modeloTabla.addRow(objeto);
            }

        }

        //Agregar los titulos a la columnda
        TablaHistorialVentas.setModel(modeloTabla);

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Calendario = new com.toedter.calendar.JCalendar();
        jLabel2 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        btnFiltarVentas = new javax.swing.JButton();
        btnHacerFactura = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        JScrollPane = new javax.swing.JScrollPane();
        TablaHistorialVentas = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Historial de ventas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Escoja una fecha");

        btnCargar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCargar.setText("Cargar Ventas");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnFiltarVentas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFiltarVentas.setText("Filtrar Ventas");
        btnFiltarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltarVentasActionPerformed(evt);
            }
        });

        btnHacerFactura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHacerFactura.setText("Hacer Factura");
        btnHacerFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHacerFacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(btnFiltarVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHacerFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(63, 63, 63))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addComponent(Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFiltarVentas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHacerFactura)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TablaHistorialVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JScrollPane.setViewportView(TablaHistorialVentas);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        cargarTabla();

    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnFiltarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltarVentasActionPerformed
        // TODO add your handling code here:
        Date fechaSeleccionada = Calendario.getDate();

        if (fechaSeleccionada == null) {
            JOptionPane.showMessageDialog(null, "Seleccione una fecha válida.");
            return;
        }

        List<Venta> ventasDelDia = control.traerVentasPorFecha(fechaSeleccionada);

        // Crear modelo para la tabla
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Id_Venta");
        modelo.addColumn("IdUsuario");
        modelo.addColumn("Usuario");
        modelo.addColumn("Apellidos");
        modelo.addColumn("IdCarne");
        modelo.addColumn("TipoDeCarne");
        modelo.addColumn("TipoDeMarca");
        modelo.addColumn("Fecha");
        modelo.addColumn("Cantidad Adquirida");
        modelo.addColumn("Total");

        // Llenar el modelo con los datos filtrados
        for (Venta v : ventasDelDia) {
            modelo.addRow(new Object[]{
                v.getId(),
                v.getIdUsuario(),
                v.getUsuario(),
                v.getApellidos(),
                v.getIdCarne(),
                v.getTipoDeCarne(),
                v.getTipoDeMarca(),
                v.getFecha(), // <--- GUARDA EL DATE ORIGINAL AQUÍ
                v.getCantidadAdquirida(),
                v.getTotal()
            });
        }

        TablaHistorialVentas.setModel(modelo);

    }//GEN-LAST:event_btnFiltarVentasActionPerformed

    private void btnHacerFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHacerFacturaActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = TablaHistorialVentas.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una venta de la tabla.");
            return;
        }

        // Obtener datos de la fila
        String idCompra = TablaHistorialVentas.getValueAt(filaSeleccionada, 0).toString();
        String idUsuario = TablaHistorialVentas.getValueAt(filaSeleccionada, 1).toString();
        String nombreUsuario = TablaHistorialVentas.getValueAt(filaSeleccionada, 2).toString();
        String apellidos = TablaHistorialVentas.getValueAt(filaSeleccionada, 3).toString();
        String idCarne = TablaHistorialVentas.getValueAt(filaSeleccionada, 4).toString();
        String tipoCarne = TablaHistorialVentas.getValueAt(filaSeleccionada, 5).toString();
        String tipoMarca = TablaHistorialVentas.getValueAt(filaSeleccionada, 6).toString();
        String fechaOriginal = TablaHistorialVentas.getValueAt(filaSeleccionada, 7).toString();
        String cantidad = TablaHistorialVentas.getValueAt(filaSeleccionada, 8).toString();
        String precioTotal = TablaHistorialVentas.getValueAt(filaSeleccionada, 9).toString();

        // Transformar a fecha segura
        try {

            // Parsear la fecha original
            SimpleDateFormat formatoEntrada = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
            Date fechaConvertida = formatoEntrada.parse(fechaOriginal);

            // Formato seguro para el nombre del archivo
            SimpleDateFormat formatoArchivo = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");

            // Formato bonito en español para mostrar en la factura
            SimpleDateFormat formatoEspañol = new SimpleDateFormat("EEEE d 'de' MMMM 'de' yyyy 'a las' HH:mm:ss", new Locale("es", "ES"));

            String fechaSegura = formatoArchivo.format(fechaConvertida);
            String fechaBonita = formatoEspañol.format(fechaConvertida);

            Document documento = new Document();
            String ruta = "Factura_" + nombreUsuario + "_" + fechaSegura + ".pdf";
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));
            documento.open();

            documento.add(new Paragraph("----- FACTURA DE VENTA -----"));
            documento.add(new Paragraph("Id de compra " + "" + "(Id: " + idCompra + ")"));
            documento.add(new Paragraph("Cliente: " + nombreUsuario + " " + apellidos + " (ID: " + idUsuario + ")"));
            documento.add(new Paragraph("Id de carne" + "" + "(Id: " + idCarne + ")"));
            documento.add(new Paragraph("Tipo de carne: " + tipoCarne));
            documento.add(new Paragraph("Tipo de Marca: " + tipoMarca));
            documento.add(new Paragraph("Fecha: " + fechaBonita));
            documento.add(new Paragraph("Cantidad: " + cantidad + " Unidades"));
            documento.add(new Paragraph("Total a pagar: " + precioTotal + " Colones"));
            documento.add(new Paragraph("---------------------------------"));
            documento.add(new Paragraph("Gracias por su compra."));

            documento.close();
            JOptionPane.showMessageDialog(null, "Factura generada correctamente:\n" + ruta);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar la factura.");
        }
    }//GEN-LAST:event_btnHacerFacturaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar Calendario;
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.JTable TablaHistorialVentas;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnFiltarVentas;
    private javax.swing.JButton btnHacerFactura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
}
